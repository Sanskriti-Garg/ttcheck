import React, { useState } from 'react';
import ChatMessage from './ChatMessage';
import './ChatBot.css';

function ChatBot() {
  const [messages, setMessages] = useState([
    { type: 'bot', text: 'Hello! Ask me anything.' }
  ]);
  const [input, setInput] = useState('');

  const sendMessage = async (e) => {
    e.preventDefault();
    if (!input.trim()) return;

    const userMessage = { type: 'user', text: input };
    setMessages((prev) => [...prev, userMessage]);

    // Replace with your real API call
    const botResponse = await fetch('https://your-api.com/ask', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ message: input })
    })
      .then(res => res.json())
      .then(data => ({ type: 'bot', text: data.reply || 'No response' }))
      .catch(() => ({ type: 'bot', text: 'Sorry, something went wrong.' }));

    setMessages((prev) => [...prev, botResponse]);
    setInput('');
  };

  return (
    <div className="chat-container">
      <header className="chat-header">My AI Chatbot</header>
      <div className="chat-body">
        {messages.map((msg, i) => (
          <ChatMessage key={i} type={msg.type} text={msg.text} />
        ))}
      </div>
      <form className="chat-input-area" onSubmit={sendMessage}>
        <input
          type="text"
          placeholder="Type your message..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />
        <button type="submit">âž¤</button>
      </form>
    </div>
  );
}

export default ChatBot;
















import React, { useState, useRef, useEffect } from 'react';
import './ChatBot.css';
import { FaRobot, FaRegSmile } from 'react-icons/fa';
import { chatResponses } from './chatData';
import MessageBubble from './MessageBubble';

function ChatBot() {
  const [messages, setMessages] = useState([
    { type: 'bot', text: 'Hi! I am your assistant. How can I help you today?' }
  ]);
  const [input, setInput] = useState('');
  const chatEndRef = useRef(null);

  const handleSend = (e) => {
    e.preventDefault();
    const userText = input.trim();
    if (!userText) return;

    const userMessage = { type: 'user', text: userText };
    setMessages((prev) => [...prev, userMessage]);

    const lowerText = userText.toLowerCase();
    const botReply =
      chatResponses[lowerText] || "I'm sorry, I don't understand that.";

    const botMessage = { type: 'bot', text: botReply };
    setTimeout(() => {
      setMessages((prev) => [...prev, botMessage]);
    }, 500);
    setInput('');
  };

  useEffect(() => {
    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  return (
    <div className="chat-container">
      <header className="chat-header">ðŸ¤– SmartBot</header>
      <div className="chat-body">
        {messages.map((msg, index) => (
          <MessageBubble key={index} type={msg.type} text={msg.text} />
        ))}
        <div ref={chatEndRef} />
      </div>
      <form className="chat-input" onSubmit={handleSend}>
        <input
          type="text"
          placeholder="Ask me anything..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />
        <button type="submit">âž¤</button>
      </form>
    </div>
  );
}

export default ChatBot;

import 'primereact/resources/themes/lara-light-blue/theme.css'; // or your preferred theme
import 'primereact/resources/primereact.min.css';
import 'primeicons/primeicons.css';

import { MultiSelect } from 'primereact/multiselect';

// Convert your assessmentStatusMasterData for PrimeReact
const assessmentStatusOptions = assessmentStatusMasterData
  .filter((item) => item.value !== -1) // Exclude placeholder
  .map((item) => ({
    label: item.text,
    value: item.value,
  }));

// Utility to show custom selected count
const selectedTemplate = (value: string[] | null) => {
  if (!value || value.length === 0) {
    return "Select Assessment Status";
  } else {
    return `${value.length} item${value.length > 1 ? "s" : ""} selected`;
  }
};


<div className="ui segment row mb-3">
  <div className="col-md-4 col-sm-6">
    <div className="four wide field pb-10">
      <label className="form-label fw-semibold" style={{ fontSize: "15pt" }}>
        Assessment Status<span className="required">*</span>
      </label>
      <br />

      <MultiSelect
        style={{ width: "30rem" }}
        value={vrmData.vrmAssessmentDatacopy.assessmentStatus ?? []}
        options={assessmentStatusOptions}
        onChange={(e) => {
          dispatch(setAssessmentStatus(e.value));
          validateAssessmentStatus(e.value);
        }}
        optionLabel="label"
        placeholder="Select Assessment Status"
        display="chip"
        maxSelectedLabels={0} // hides individual tags
        selectedItemTemplate={() => selectedTemplate(vrmData.vrmAssessmentDatacopy.assessmentStatus)}
        filter
        showSelectAll={false}
        className="w-full md:w-30rem"
        aria-describedby="title-error"
        required
        aria-invalid={!!error}
      />

      {error?.assessmentstatus && (
        <div className="text-danger mt-1">
          <strong id="title-error" role="alert">{error.assessmentstatus}</strong>
        </div>
      )}
    </div>
  </div>
</div>

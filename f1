<div className="four wide field pb-10">
  <label
    className="form-label fw-semibold "
    style={{ fontSize: "15pt"}}
  >
    Assessment Status<span className="required">*</span>
  </label>
  <br />
  <Dropdown
    style={{ width: "30rem" }}
    placeholder="Assessment Status"
    multiple
    selection
    search
    className="fixed-multi-dropdown"
    value={vrmData.vrmAssessmentDatacopy.assessmentStatus ?? -1}
    options={assessmentStatusMasterData}
    onChange={(event, data) => {
      dispatch(setAssessmentStatus(data.value));
      validateAssessmentStatus(data.value);
    }}
    id="assessmentstatus"
    name="assessmentstatus"
    aria-describedby="title-error"
    required
    aria-invalid={!!error}
    renderLabel={(item) => {
      // Show all selected items but limit the visible area
      return (
        <div style={{
          display: 'inline-flex',
          alignItems: 'center',
          maxWidth: '100%',
          overflow: 'hidden'
        }}>
          <span style={{
            whiteSpace: 'nowrap',
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            maxWidth: 'calc(100% - 50px)'
          }}>
            {item.text}
          </span>
        </div>
      );
    }}
    // Add this to control the display of selected items
    renderText={(value, options, selectedOptions) => {
      if (selectedOptions.length === 0) {
        return "Assessment Status";
      }
      
      // Show first 2 items fully, then "+X more"
      const maxVisibleItems = 2;
      const visibleItems = selectedOptions.slice(0, maxVisibleItems);
      const remainingCount = selectedOptions.length - maxVisibleItems;
      
      return (
        <div style={{
          display: 'flex',
          alignItems: 'center',
          flexWrap: 'nowrap',
          overflow: 'hidden',
          textOverflow: 'ellipsis',
          width: '100%'
        }}>
          {visibleItems.map((option, index) => (
            <span key={option.value} style={{
              marginRight: '5px',
              whiteSpace: 'nowrap'
            }}>
              {option.text}
              {index < visibleItems.length - 1 ? ',' : ''}
            </span>
          ))}
          {remainingCount > 0 && (
            <span style={{
              background: '#e0e0e0',
              borderRadius: '10px',
              padding: '2px 8px',
              fontSize: '0.8em',
              marginLeft: '5px',
              whiteSpace: 'nowrap'
            }}>
              +{remainingCount} more
            </span>
          )}
        </div>
      );
    }}
  />
</div>
